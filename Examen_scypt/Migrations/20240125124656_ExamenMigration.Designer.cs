// <auto-generated />
using System;
using Examen_scypt.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Examen_scypt.Migrations
{
    [DbContext(typeof(ExamenContext))]
    [Migration("20240125124656_ExamenMigration")]
    partial class ExamenMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Examen_scypt.Models.Comenzi", b =>
                {
                    b.Property<int>("ComenziId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComenziId"));

                    b.Property<int>("UtilizatorId")
                        .HasColumnType("int");

                    b.HasKey("ComenziId");

                    b.HasIndex("UtilizatorId");

                    b.ToTable("Comenzii");
                });

            modelBuilder.Entity("Examen_scypt.Models.ComenziProdus", b =>
                {
                    b.Property<int?>("ComenziId")
                        .HasColumnType("int");

                    b.Property<int>("ProdusId")
                        .HasColumnType("int");

                    b.HasKey("ComenziId", "ProdusId");

                    b.ToTable("ComenziProduse");
                });

            modelBuilder.Entity("Examen_scypt.Models.Examen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Examene");
                });

            modelBuilder.Entity("Examen_scypt.Models.Produs", b =>
                {
                    b.Property<int>("ProdusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdusId"));

                    b.HasKey("ProdusId");

                    b.ToTable("Produse");
                });

            modelBuilder.Entity("Examen_scypt.Models.Utilizator", b =>
                {
                    b.Property<int>("UtilizatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UtilizatorId"));

                    b.HasKey("UtilizatorId");

                    b.ToTable("Utilizators");
                });

            modelBuilder.Entity("Examen_scypt.Models.Comenzi", b =>
                {
                    b.HasOne("Examen_scypt.Models.Utilizator", "Utilizator")
                        .WithMany("Comenzi")
                        .HasForeignKey("UtilizatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilizator");
                });

            modelBuilder.Entity("Examen_scypt.Models.ComenziProdus", b =>
                {
                    b.HasOne("Examen_scypt.Models.Comenzi", "Comenzi")
                        .WithMany("ComenziProdus")
                        .HasForeignKey("ComenziId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Examen_scypt.Models.Produs", "Produs")
                        .WithMany("ComenziProdus")
                        .HasForeignKey("ComenziId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comenzi");

                    b.Navigation("Produs");
                });

            modelBuilder.Entity("Examen_scypt.Models.Comenzi", b =>
                {
                    b.Navigation("ComenziProdus");
                });

            modelBuilder.Entity("Examen_scypt.Models.Produs", b =>
                {
                    b.Navigation("ComenziProdus");
                });

            modelBuilder.Entity("Examen_scypt.Models.Utilizator", b =>
                {
                    b.Navigation("Comenzi");
                });
#pragma warning restore 612, 618
        }
    }
}
